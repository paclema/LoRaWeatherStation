;PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = IoT-PostBox_v1
; default_envs = mhetesp32minikit

[env]
framework = arduino
monitor_speed = 115200
upload_speed = 921600
monitor_raw = yes
monitor_filters = time, default, esp32_exception_decoder
board_build.filesystem = littlefs

[common_env_data]
framework = arduino
monitor_speed = 115200
upload_speed = 921600
lib_deps_base =
  paclema/WebConfigServer @ ^3.0.0

lib_deps_lora  =
  paclema/LoRaWANClient @ ^0.0.1

build_flags =
  -w                          ; To remove compilation warnings
  -D USE_ASYNC_WEBSERVER      ; To use Async webserver defining cpp files:

  -D CONFIG_JSON_SIZE=4096    ; To define WebConfigServer max config.json size

  ; -D ENABLE_SERIAL_DEBUG    ; To enable Serial debug
  ; -D DEBUG_ESP_CORE         ; More debug levels here: https://docs.platformio.org/en/latest/platforms/espressif8266.html#debug-level
  ; -D DEBUG_ESP_WIFI
  ; -D DEBUG_ESP_OTA

  -D CORE_DEBUG_LEVEL=5       ;To enable ESP32 core debug
  -D CONFIG_ARDUHAL_LOG_COLORS=1

build_flags_WeatherStation = 
  -D PIN_WDIR=SW2_PIN
  -D PIN_WSPEED=34
  -D PIN_RAIN=SW1_PIN

build_flags_lora = 
    -D ARDUINO_LMIC_PROJECT_CONFIG_H_SUPPRESS
    -D CFG_eu868=1
    -D CFG_sx1276_radio=1
    -D hal_init=LMICHAL_init
    -D LMIC_DEBUG_LEVEL=2

build_flags_no_iot_postbox_board=
  ; PowerManagement pin definitions
  -D VBUS_SENSE_PIN=34
  -D VBAT_SENSE_PIN=35
  -D VBAT_STAT_SENSE_PIN=36
  ; LoRa module pin definitions (uncomment and adjust as needed)
  -D RFM95W_SCK_PIN=18
  -D RFM95W_MISO_PIN=19
  -D RFM95W_MOSI_PIN=23
  -D RFM95W_NSS_PIN=5
  -D RFM95W_RESET_PIN=14
  -D RFM95W_DIO0_PIN=26
  -D RFM95W_DIO1_PIN=33
  -D RFM95W_DIO2_PIN=32
  -D SW1_PIN=4
  -D SW2_PIN=5

  -D LDO2_EN_PIN=21
  ; -D LED_BUILTIN=LDO2_EN_PIN

; ============================================================================
; ESP32 TARGETS
; ============================================================================

[env:esp32base]
platform = https://github.com/pioarduino/platform-espressif32.git#develop
lib_deps =
  ${common_env_data.lib_deps_base}
  ${common_env_data.lib_deps_lora}
  
  paclema/PowerManagement@^0.3.0

build_flags =
  ${common_env_data.build_flags}
  ${common_env_data.build_flags_lora}
  ${common_env_data.build_flags_WeatherStation}



[env:IoT-PostBox_v1]
extends = env:esp32base
; arduino-esp32 v3.3.0 is giving issues using I2C https://github.com/espressif/arduino-esp32/issues/11228
; platform = https://github.com/pioarduino/platform-espressif32/releases/download/53.03.12/platform-espressif32.zip 

board = iot-postbox_v1
board_build.variants_dir = boards/variants
board_build.partitions = ./board_partitions/esp32/iotpostboxv1_16MB.csv

; TODO: try to upload bootloader
; board_upload.flash_extra_images =
;     0x10000, boards/variants/iotpostbox_v1/bootloader.bin
;     0x410000, boards/variants/iotpostbox_v1/tinyuf2.bin
; upload_command = avrdude $UPLOAD_FLAGS -U flash:w:$SOURCE:i

build_flags =
  ${env:esp32base.build_flags}
  -D LED_BUILTIN=LDO2_EN_PIN


[env:mhetesp32minikit]
extends = env:esp32base
board = mhetesp32minikit
board_build.partitions = board_partitions/esp32/default_4MB.csv
build_flags =
  ${common_env_data.build_flags_no_iot_postbox_board}
  ${env:esp32base.build_flags}

