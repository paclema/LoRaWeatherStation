;PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
; default_envs = IoT-PostBox_v1
default_envs = mhetesp32minikit

[common_env_data]
framework = arduino
monitor_speed = 115200
upload_speed = 921600
lib_deps_base =
  ; paclema/WebConfigServer @ ^2.2.0
  http://github.com/paclema/WebConfigServer.git#v2.2.0
  paclema/MQTTClient @ ^0.1.1

lib_deps_lora  =
  MCCI LoRaWAN LMIC library
  sabas1080/CayenneLPP @ ^1.1.0

build_flags =
  -w                          ; To remove compilation warnings
  -D USE_ASYNC_WEBSERVER      ; To use Async webserver defining cpp files:

  -D CONFIG_JSON_SIZE=4096    ; To define WebConfigServer max config.json size

  ; -D ENABLE_SERIAL_DEBUG    ; To enable Serial debug
  ; -D DEBUG_ESP_CORE         ; More debug levels here: https://docs.platformio.org/en/latest/platforms/espressif8266.html#debug-level
  ; -D DEBUG_ESP_WIFI
  ; -D DEBUG_ESP_OTA

build_flags_lora = 
    -D ARDUINO_LMIC_PROJECT_CONFIG_H_SUPPRESS
    -D CFG_eu868=1
    -D CFG_sx1276_radio=1
    -D hal_init=LMICHAL_init
    -D LMIC_DEBUG_LEVEL=2



[env:IoT-PostBox_v1]
platform = https://github.com/paclema/platform-espressif32.git#iot-postbox_v1_support
board = iot-postbox_v1
framework = ${common_env_data.framework}
platform_packages =
	toolchain-xtensa32s2
  framework-arduinoespressif32 @ https://github.com/paclema/arduino-esp32.git#iot-postbox_v1_board_variant
monitor_filters = esp32_exception_decoder
board_build.mcu = esp32s2
board_build.f_cpu = 240000000L

board_build.partitions = ./board_partitions/esp32/iotpostboxv1_16MB.csv
board_build.filesystem = littlefs
monitor_speed = ${common_env_data.monitor_speed}
upload_speed = ${common_env_data.upload_speed}
; upload_port = COM17
; monitor_port = COM20
lib_deps =
  ${common_env_data.lib_deps_base}
  ${common_env_data.lib_deps_lora}
  https://github.com/paclema/PowerManagement
  ; https://github.com/lorol/LITTLEFS.git

build_flags =
  ${common_env_data.build_flags}
  ${common_env_data.build_flags_lora}
  -D LED_BUILTIN=LDO2_EN_PIN

  -D CORE_DEBUG_LEVEL=5     ;To enable ESP32 core debug
  -D CONFIG_ARDUHAL_LOG_COLORS=1

  -D PIN_WDIR=SW2_PIN
  -D PIN_WSPEED=33
  -D PIN_RAIN=SW1_PIN

[env:mhetesp32minikit]
platform = espressif32
board = mhetesp32minikit
framework = ${common_env_data.framework}
platform_packages =
  ; framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#master
  framework-arduinoespressif32 @ https://github.com/paclema/arduino-esp32#psramTLSdef
  toolchain-xtensa32@2.80400  ; LWIP needs toolchain-xtensa32 >= v8.4.0
monitor_speed = 115200
upload_speed = 921600
monitor_filters = esp32_exception_decoder
lib_deps =
  ${common_env_data.lib_deps_base}
  ${common_env_data.lib_deps_lora}
board_build.filesystem = littlefs
board_build.partitions = board_partitions/esp32/default_4MB.csv
build_flags =
  ${common_env_data.build_flags}
  ${common_env_data.build_flags_lora}

  -D CORE_DEBUG_LEVEL=5     ;To enable ESP32 core debug
  -D CONFIG_ARDUHAL_LOG_COLORS=1

  -D RFM95W_RESET_PIN=-1
  -D RFM95W_SCK_PIN=-1
  -D RFM95W_MISO_PIN=-1
  -D RFM95W_MOSI_PIN=-1
  -D RFM95W_NSS_PIN=-1
  -D RFM95W_DIO0_PIN=-1
  -D RFM95W_DIO1_PIN=-1
  -D RFM95W_DIO2_PIN=-1
  -D SW1_PIN=4
  -D SW2_PIN=5

  ; -D PIN_WDIR=SW2_PIN
  -D PIN_WDIR=32
  -D PIN_WSPEED=33
  -D PIN_RAIN=SW1_PIN
